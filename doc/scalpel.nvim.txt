*scalpel.nvim.txt*          For NVIM v0.1.0          Last change: 2024 June 05

==============================================================================
Table of Contents                             *scalpel.nvim-table-of-contents*

1. scalpel.nvim                                    |scalpel.nvim-scalpel.nvim|
  - Installation                      |scalpel.nvim-scalpel.nvim-installation|
  - Usage                                    |scalpel.nvim-scalpel.nvim-usage|
  - Acknowledgments                |scalpel.nvim-scalpel.nvim-acknowledgments|
2. Links                                                  |scalpel.nvim-links|

==============================================================================
1. scalpel.nvim                                    *scalpel.nvim-scalpel.nvim*

**scalpel.nvim** is a Neovim plugin designed to expedite your find/replace
workflow within a buffer. It sets up Neovim’s native |`substitution`|
command, automating some steps to eliminate some typing.

<https://github.com/wassimk/scalpel.nvim/actions/workflows/build.yml>


INSTALLATION                          *scalpel.nvim-scalpel.nvim-installation*

Install **scalpel.nvim** with your preferred plugin manager.

The following example shows the installation process using lazy.nvim
<https://github.com/folke/lazy.nvim>. It sets the scalpel substitute keymap to
`<leader>e`.

>lua
    {
      'wassimk/scalpel.nvim',
      version = "*",
      config = true,
      keys = {
        {
          '<leader>e',
          function()
            require('scalpel').substitute()
          end,
          mode = { 'n', 'x' },
          desc = 'substitute word(s)',
        },
      },
    }
<


USAGE                                        *scalpel.nvim-scalpel.nvim-usage*

Using **scalpel.nvim** is simple:

1. Move the cursor over the word you wish to replace.
2. Trigger the substitution with the `<leader>e` keymap.
3. Begin typing your desired substitution and hit return. Note that the original word is being captured, so if you would like to incorporate it into your replacement, use `\1`.

This plugin also supports visual mode selection for substitutions within a
single line.


ACKNOWLEDGMENTS                    *scalpel.nvim-scalpel.nvim-acknowledgments*

This project was inspired by Scalpel <https://github.com/wincent/scalpel>, a
Vimscript plugin I’ve used for many years. **scalpel.nvim** is my version
reimagined and implemented in Lua for fun.

==============================================================================
2. Links                                                  *scalpel.nvim-links*

1. *scalpel-nvim demo*: demo.gif
2. *build*: https://github.com/wassimk/scalpel.nvim/actions/workflows/build.yml/badge.svg
3. *release*: https://img.shields.io/github/v/release/wassimk/scalpel.nvim?logo=github

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
